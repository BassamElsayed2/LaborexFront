import "/public/assets/css/plugins/bootstrap.min.css";
import "/public/assets/css/plugins/aos.css";
import "/public/assets/css/plugins/nice-select.css";
import "/public/assets/css/plugins/barfiller.css";
import "/public/assets/css/plugins/all.css";
import "/public/assets/css/style.css";

import type { Metadata } from "next";
import { Cairo } from "next/font/google"; // ✅ Use Cairo
import { notFound } from "next/navigation";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";

import QueryProvider from "@/util/QueryProvider";

// ✅ Set up Cairo font
const cairo = Cairo({
  subsets: ["arabic", "latin"],
  weight: ["400", "500", "600", "700"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Laborex",
  description: "Generated by ENS",
};

interface LayoutProps {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}

export default async function RootLayout(props: LayoutProps) {
  const { params } = props;
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  let messages;
  try {
    messages = (await import(`@/messages/${locale}.json`)).default;
  } catch (error) {
    notFound(); // لو ملف اللغة غير موجود
  }

  const direction = locale === "ar" ? "rtl" : "ltr";

  return (
    <html lang={locale} dir={direction}>
      <body className={cairo.className}>
        <QueryProvider>
          <NextIntlClientProvider locale={locale} messages={messages}>
            {props.children}
          </NextIntlClientProvider>
        </QueryProvider>
      </body>
    </html>
  );
}
